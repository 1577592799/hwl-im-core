// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/java/com/hwl/imcore/protocol/im_message.proto

package com.hwl.imcore.improto;

/**
 * Protobuf enum {@code ImGroupOperateType}
 */
public enum ImGroupOperateType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>OperateNone = 0;</code>
   */
  OperateNone(0),
  /**
   * <code>CreateGroup = 1;</code>
   */
  CreateGroup(1),
  /**
   * <code>ExitGroup = 2;</code>
   */
  ExitGroup(2),
  /**
   * <code>DismissGroup = 3;</code>
   */
  DismissGroup(3),
  /**
   * <code>AddUser = 4;</code>
   */
  AddUser(4),
  /**
   * <code>RemoveUser = 5;</code>
   */
  RemoveUser(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>OperateNone = 0;</code>
   */
  public static final int OperateNone_VALUE = 0;
  /**
   * <code>CreateGroup = 1;</code>
   */
  public static final int CreateGroup_VALUE = 1;
  /**
   * <code>ExitGroup = 2;</code>
   */
  public static final int ExitGroup_VALUE = 2;
  /**
   * <code>DismissGroup = 3;</code>
   */
  public static final int DismissGroup_VALUE = 3;
  /**
   * <code>AddUser = 4;</code>
   */
  public static final int AddUser_VALUE = 4;
  /**
   * <code>RemoveUser = 5;</code>
   */
  public static final int RemoveUser_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ImGroupOperateType valueOf(int value) {
    return forNumber(value);
  }

  public static ImGroupOperateType forNumber(int value) {
    switch (value) {
      case 0: return OperateNone;
      case 1: return CreateGroup;
      case 2: return ExitGroup;
      case 3: return DismissGroup;
      case 4: return AddUser;
      case 5: return RemoveUser;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ImGroupOperateType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ImGroupOperateType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ImGroupOperateType>() {
          public ImGroupOperateType findValueByNumber(int number) {
            return ImGroupOperateType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.hwl.imcore.improto.ImMessage.getDescriptor().getEnumTypes().get(4);
  }

  private static final ImGroupOperateType[] VALUES = values();

  public static ImGroupOperateType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ImGroupOperateType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ImGroupOperateType)
}

